% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bootstrap_fitRT_Prism.R
\docType{methods}
\name{Bootstrap_fitRT_Prism}
\alias{Bootstrap_fitRT_Prism}
\alias{twoCompFitRT_Prism}
\alias{fitRT_Boot_2comp_Prism}
\title{Fitting 1-CDF of Bootstrapped residence time data with exponential decay using modified formula}
\usage{
calculate_1_CDF(trackll=trackll,x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),t.interval=0.5,output=FALSE,plot_linear=TRUE)

calculate_1_CDF_multiple(trackll=c(trackll1,trackll2),x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),
t.interval=0.5,x.max.linear=NULL,output=FALSE,plot_linear=FALSE,plotCI=TRUE)

BootData=Boot_1_CDF(trackll=trackll,t.interval=0.25,R=100,output=FALSE,plot=TRUE,x.max=100,y.min=0.0001)

fitRT_Boot_2comp_Prism(BootData,t.interval=0.25,x.max=100,y.min=0.0001,output=FALSE,plateau=FALSE,k_ns=FALSE)
}
\arguments{
\item{t.interval}{time interval for image aquisition. Default 0.5 sec.}

\item{plateau}{A Logical indicate whether to include a plateau in the fitting equation, if FALSE, will set plateau as 0.}

\item{trackll}{trajectory list generated by createTrackll() and processing. if NULL, user will be prompted to enter the trackll name.}

\item{x.max}{The maximum range of X axis for log-log scaled plot, i.e. time, for the output plot. Default 100 sec.}

\item{y.min}{The minium value of Y axis in log scaled plot.}

\item{filter}{Filter the tracks by step/frame number (length). Only tracks pass through filter will be selected.}

\item{output}{A Logical indicate if output should be generated. See Values for detail.}

\item{k.ns}{Logical indicate, a single numeric or a numeric range used to control fitting.}

\item{plotType}{type of plot for 1-CDF, "l" for line plot, "p" for point plot.}
}
\value{
\itemize{
\item{csv:} 
The fitting functions output the fitting result of original and all bootstrapped data sets.

\item{Plot:} fitting of original and bootstrapped datasets.
}
}
\description{
Fit 1-CDF of from bootstrapped data sets with multi-component exponential decay can derive average unbinding rate (k off) 
and estimate the standard deviation.
}
\details{
fitting 1-CDF of all bootstrapped data sets with multi-component exponential decay can derive average unbinding rate (k off) 
and estimate the standard deviation.

1-CDF is fitted with modified 2-component exponential decay formula in case of x>0 when 1-CDF=1.
Plateau + (Y0-Plateau)*alpha*exp(-k_s*(t)) + (Y0-Plateau)*(1-alpha)*exp(-k_ns*(t))
}
\examples{

# Generate trackll, and process, 
# e.g. mask region of interest, merge tracks from multiple files.
folder1=system.file("extdata","HSF",package="sojourner")
trackll1=createTrackll(folder1,input=2, cores = 2)
trackll1=maskTracks(folder1,trackll1)
trackll1=mergeTracks(folder1,trackll1)

folder2=system.file("extdata","HSF_2",package="sojourner")
trackll2=createTrackll(folder2,input=2, cores = 2)
trackll2=maskTracks(folder2,trackll2)
trackll2=mergeTracks(folder2,trackll2)

# Plot and output the survival curve,
calculate_1_CDF(trackll=trackll1,x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),
t.interval=0.5,output=FALSE,plot_linear=TRUE)
calculate_1_CDF_multiple(trackll=c(trackll1,trackll2),x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),
t.interval=0.5,x.max.linear=NULL,output=FALSE,plot_linear=FALSE,plotCI=TRUE)

# Generate boot strapped data
BootData=Boot_1_CDF(trackll=trackll,t.interval=0.25,R=100,output=FALSE,
plot=TRUE,x.max=100,y.min=0.0001)

# Fit boot strapped data
fitRT_Boot_2comp_Prism(BootData,t.interval=0.25,x.max=100,y.min=0.0001,
                                 output=FALSE,plateau=FALSE,k_ns=FALSE,plot.fit = TRUE)


}
