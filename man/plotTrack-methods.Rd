% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotTrack.R
\docType{methods}
\name{plotTrack}
\alias{plotTrack}
\alias{.plotTrack}
\alias{plotTrackFromIndex}
\alias{plotTrackOverlay}
\alias{plotNucTrackOverlay}
\alias{plotComponentTrackOverlay}
\alias{plotMask}
\alias{plotNucTrackOverlayTrackl}
\title{plotTrack}
\usage{
plotTrack(ab.trackll,resolution=0.107,frame.min=8,frame.max=100,
frame.start=1,frame.end=500)

plotTrackFromIndex(index.file, movie.folder,
resolution=0.107,frame.min=1,frame.max=100,
frame.start=1,frame.end=500,input=1)

plotTrackOverlay(trackll,max.pixel=128,nrow=2,ncol=2,width=16,height=16)

plotNucTrackOverlay(folder,trackll=NULL,cores=1,
max.pixel=128,nrow=2,ncol=2,width=16,height=16)

plotComponentTrackOverlay(folder,trackll.sel=NULL,
max.pixel=128,nrow=2,ncol=2,width=16,height=16)

plotMask(folder,max.pixel=128,nrow=2,ncol=2,width=16,height=16)
}
\arguments{
\item{resolution}{ratio of pixel to uM.}

\item{frame.min}{minimum frame number for plotting.}

\item{frame.max}{max frame number for plotting.}

\item{frame.start}{the first frame to plot. Default 1.}

\item{frame.end}{last frame to plot. Default 500.}

\item{ab.trackll}{absolute coordinates for plotting, generated from
createTrackll(folder, input, ab.track=TRUE).}

\item{trackll}{a list of track lists.}

\item{folder}{folder containing desired input data.}

\item{index.file}{a csv file that contains index of tracks in the first
column. Leave a header line when preparing such a file.}

\item{movie.folder}{the path to the folder which contains track files 
(presumably it is the same folder with movie files).}

\item{max.pixel}{Number of pixels of imaging regime.}

\item{nrow}{Number of rows in the final plot.}

\item{ncol}{Number of colums in the final plot.}

\item{width}{Width of the page for plotting.}

\item{height}{Height of the page for plotting.}

\item{cores}{Number of cores to be used.}

\item{trackll.sel}{Selected component trajectory output by
selComponentTracks().}

\item{input}{Input file type (Diatrack .txt file = 1; Diatrack .mat session
file = 2; ImageJ .csv file = 3; SlimFast .txt file = 4).}
}
\value{
\itemize{
\item{PDF} One PDF file with all the frames satisfy the creteria. If 
trackll has multiple items, it ouptus mutiple PDF files each corresponding 
to one item.

\item{csv} Outputs csv file of the coordiantes of the trajectory, which
users can use other plotting software (e.g. Prism or Excel) to plot tracks
in their favor.
}
}
\description{
Plot track/trajectory from track list. either randomly or
specified.
}
\details{
\itemize{
\item{plotTrackFromIndex:} if user provide a csv file with first column
listing the index of trajectories, this program will plot the tracks isted
in the csv file. It is useful after manipulating with the output from 
Dcoef, to plot the tracks that of interest to the user (e.g. highest 
Dcoef). User need to provide the indexFile.csv, and specify the movie 
folder which contains the movies where specified trajectories are tracked.

\item{plotTrackOverlay:} plot all tracks in trackll overlaid on one plot.

\item{plotNucTrackOverlay:} plot tracks in a movie overlayed with nuclei
image. The nuclei image file must end with "_Nuclei.tif" to be recognized.
If trackll is NULL (default), program will read in trackll from specified
folder and return trackll, otherwise it will take the specified trackll
directly.

\item{plotComponentTrackOverlay:} plot tracks base on component fitting of
diffusion coefficient. Combined with selComponentTracks() function, 
together it allows select and plot tracks based on component fitting of 
track diffusion coefficient.

\item{plotMask:} plot image mask. The mask file name must ended with
_MASK.tiff to be recognized.

}
}
\examples{
folder=system.file("extdata","SWR1",package="sojourner")
trackll.ab=createTrackll(folder=folder, input=3, ab.track=TRUE)
plotTrack(trackll.ab)

## plot from index file
index.file=system.file("extdata","INDEX","indexFile.csv",
package="sojourner")
movie.folder=system.file("extdata","SWR1",package="sojourner")
plotTrackFromIndex(index.file=index.file,movie.folder = movie.folder,
input = 3)

## index file contain trajectories from multiple movie folders
folder1=system.file("extdata","SWR1",package="sojourner")
folder2=system.file("extdata","HTZ1",package="sojourner")
index.file2=system.file("extdata","INDEX","indexFile2.csv",
package="sojourner")
plotTrackFromIndex(index.file=index.file2,
 movie.folder = c(folder1,folder2),
 input = 3)

## masking with image mask
track.folder=system.file("extdata","SWR1_2",package="sojourner")
trackll=createTrackll(folder=track.folder, input=3)
trackll.masked <- maskTracks(folder=track.folder, trackll=trackll)
str(trackll,1)
str(trackll.masked,1)

## compare the masking effect
plotTrackOverlay(trackll,nrow=1,ncol=1,width=8,height=8)
plotTrackOverlay(trackll.masked,nrow=1,ncol=1,width=8,height=8)

## compare masking effect with nuclei image
plotNucTrackOverlay(folder=track.folder,trackll,
                    nrow=1,ncol=1,width=8,height=8)
plotNucTrackOverlay(folder=track.folder,trackll.masked,
                    nrow=1,ncol=1,width=8,height=8)

## plot mask
plotMask(track.folder,nrow=1,ncol=1,width=8,height=8)


## plotComponentTrackOverlay (see selComponentTracks() for more details)
folder2=system.file("extdata","SWR1_2",package="sojourner")
trackll=createTrackll(folder=folder2, input=3)

## use mergeTracks() for per folder comparison, the analsyis result 
## can't be plot
##back to original image. To see component tracks on original nuclei image,
## do not use mergeTracks(), for per movie analysis.

## compute MSD
MSD=msd(trackll=trackll,plot=TRUE)
msd(trackll=trackll,summarize=TRUE,plot=TRUE)

## calculate Dcoef
dcoef=Dcoef(MSD=MSD,method="static",plot=TRUE)

## fit normal distribution to define component
## set seed to reproduce results (see fitNormalDistr() for details on seed)
set.seed(123)
fit=fitNormDistr(
dcoef,components=2,log.transform=TRUE,combine.plot=FALSE,output=FALSE)

## select component tracks based on fitting
trackll.sel=selComponentTracks(trackll,
fit=fit,likelihood = 0.9,dcoef = dcoef,log.transformed=TRUE, output=FALSE)

## plot component tracks
# plotComponentTrackOverlay(folder2,trackll.sel=trackll.sel)
}
