% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bootstrap_fitRT.R
\docType{methods}
\name{Bootstrap_fitRT}
\alias{Bootstrap_fitRT}
\alias{calculate_1_CDF}
\alias{calculate_1_CDF_multiple}
\alias{Boot_1_CDF}
\alias{fitRT_Boot_1comp}
\alias{fitRT_Boot_2comp}
\alias{fitRT_Boot_3comp}
\alias{fitRT_Boot_2and3comp}
\title{Fitting 1-CDF of Bootstrapped residence time data with exponential decay}
\usage{
calculate_1_CDF(trackll=trackll,x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),t.interval=0.5,output=FALSE,plot_linear=TRUE)

calculate_1_CDF_multiple(trackll=c(trackll1,trackll2),x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),
t.interval=0.5,x.max.linear=NULL,output=FALSE,plot_linear=FALSE,plotCI=TRUE)

BootData=Boot_1_CDF(trackll=trackll,t.interval=0.25,R=100,output=FALSE,plot=TRUE,x.max=100,y.min=0.0001)

fitRT_Boot_1comp(BootData,t.interval=0.25,x.max=100,y.min=0.0001,output=FALSE,plot.fit = TRUE)

fitRT_Boot_2comp(BootData,t.interval=0.25,x.max=100,y.min=0.0001,output=FALSE,k_ns=FALSE)

fitRT_Boot_3comp(BootData,t.interval=0.25,x.max=100,y.min=0.0001,output=FALSE,k_ns=FALSE)

fitRT_Boot_2and3comp(BootData,t.interval=0.25,x.max=100,y.min=0.0001,
                                 cutoff=FALSE,weighting=TRUE,output=FALSE,k_ns=FALSE,plot.fit = TRUE)
}
\arguments{
\item{trackll}{trajectory list generated by createTrackll() and processing. if NULL, user will be prompted to enter the trackll name.}

\item{x.max}{The maximum range of X axis for log-log scaled plot, i.e. time, for the output plot. Default 100 sec.}

\item{y.min}{The minium value of Y axis in log scaled plot.}

\item{filter}{Filter the tracks by step/frame number (length). Only tracks pass through filter will be selected.}

\item{t.interval}{time interval for image aquisition. Default 0.5 sec.}

\item{output}{A Logical indicate if output should be generated. See Values for detail.}

\item{plot_linear}{An Logical indicate if also plot in linear scale. log-log scaled plot is default.}

\item{x.max.linear}{The maximum range of X axis for linear scaled plot, if not specified, will be generated based on data.}

\item{plotCI}{A Logical indicate if to plot upper and lower bound of 95 percent conficence interval.}

\item{R}{number of resampling times for bootstrapping, default is 100.}

\item{plot}{A Logical indicate if to plot for Boot_1_CDF.}

\item{plot.fit}{An Logical indicate if to plot the fitting result of all bootstrapped data set. If False, only 3 rows of fitting will be plotted.}

\item{cutoff}{A value of X axis (time) to cutoff when fitting. Data points larger than cutoff will not be used in fitting.}

\item{weighting}{A Logical indicate if the fitting should weight on the tail of 1-CDF curve, the weighting equation is 1/Y.}

\item{k.ns}{Logical indicate or numeric used to control fitting.}

\item{plotType}{type of plot for 1-CDF, "l" for line plot, "p" for point plot.}
}
\value{
\itemize{
\item{csv:} calculate_1_CDF outputs 1-CDF of track lengths of a single trackll and time intervals output in .csv format, when output = TRUE.
calculate_1_CDF_multiple outputs 1-CDF of track lenghts of multiple trackll and time intervals output in .csv format, when output = TRUE.
Boot_1_CDF outputs 1-CDF of track length of original and bootstrapped data of a single trackll.
The fitting functions output the fitting result of original and all bootstrapped data sets.

\item{Plot:} 1-CDF of track lengths of each input trackll will be plotted together in one plot.
}
}
\description{
Calculate/Compare Residence time/Survival Curve of single/multiple trackll, 
with upper and lower bound of 95 percent conficence interval.

Generate bootstrapped data sets (resampling) of residence times, fitting 1-CDF of all bootstrapped
data sets with multi-component exponential decay can derive average unbinding rate (k off) 
and estimate the standard deviation.
}
\details{
calculate_1_CDF calculate Survival Curve of a trackll, with upper and lower bound of 
95 percent conficence interval. The survival curve/probability is calculated as 1-CDF of the length of tracks/trajectories.

calculate_1_CDF_multiple compare the 1-CDF of multiple tracklls.

Boot_1_CDF generates bootstrapped data sets (resampling) of residence times, and plot
1-CDF curves of original and bootstrapped data sets.

fitting 1-CDF of all bootstrapped data sets with multi-component exponential decay can derive average unbinding rate (k off) 
and estimate the standard deviation.

The maximum time range to be plotted can be set using x.max, this will not change the curve/probabiltiy, 
which is determined by all track information in the trackll.
}
\examples{

# Generate trackll, and process, 
# e.g. mask region of interest, merge tracks from multiple files.
folder1=system.file("extdata","HSF",package="sojourner")
trackll1=createTrackll(folder1,input=2, cores = 2)
trackll1=maskTracks(folder1,trackll1)
trackll1=mergeTracks(folder1,trackll1)

folder2=system.file("extdata","HSF_2",package="sojourner")
trackll2=createTrackll(folder2,input=2, cores = 2)
trackll2=maskTracks(folder2,trackll2)
trackll2=mergeTracks(folder2,trackll2)

# Plot and output the survival curve,
calculate_1_CDF(trackll=trackll1,x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),
t.interval=0.5,output=FALSE,plot_linear=TRUE)
calculate_1_CDF_multiple(trackll=c(trackll1,trackll2),x.max=100,y.min=0.0001,filter=c(min=3,max=Inf),
t.interval=0.5,x.max.linear=NULL,output=FALSE,plot_linear=FALSE,plotCI=TRUE)

# Generate boot strapped data
BootData=Boot_1_CDF(trackll=trackll,t.interval=0.25,R=100,output=FALSE,
plot=TRUE,x.max=100,y.min=0.0001)

# Fit boot strapped data
fitRT_Boot_2and3comp(BootData,t.interval=0.25,x.max=100,y.min=0.0001,
                                 cutoff=FALSE,weighting=TRUE,output=FALSE,k_ns=FALSE,plot.fit = TRUE)


}
